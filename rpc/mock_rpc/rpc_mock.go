// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/Pirionfr/lookatch-agent/rpc (interfaces: ControllerClient,Controller_ChannelClient)

package mock_rpc

import (
	context "context"
	rpc "github.com/Pirionfr/lookatch-agent/rpc"
	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
	metadata "google.golang.org/grpc/metadata"
)

// Mock of ControllerClient interface
type MockControllerClient struct {
	ctrl     *gomock.Controller
	recorder *_MockControllerClientRecorder
}

// Recorder for MockControllerClient (not exported)
type _MockControllerClientRecorder struct {
	mock *MockControllerClient
}

func NewMockControllerClient(ctrl *gomock.Controller) *MockControllerClient {
	mock := &MockControllerClient{ctrl: ctrl}
	mock.recorder = &_MockControllerClientRecorder{mock}
	return mock
}

func (_m *MockControllerClient) EXPECT() *_MockControllerClientRecorder {
	return _m.recorder
}

func (_m *MockControllerClient) Channel(_param0 context.Context, _param1 ...grpc.CallOption) (rpc.Controller_ChannelClient, error) {
	_s := []interface{}{_param0}
	for _, _x := range _param1 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "Channel", _s...)
	ret0, _ := ret[0].(rpc.Controller_ChannelClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockControllerClientRecorder) Channel(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0}, arg1...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Channel", _s...)
}

// Mock of Controller_ChannelClient interface
type MockController_ChannelClient struct {
	ctrl     *gomock.Controller
	recorder *_MockController_ChannelClientRecorder
}

// Recorder for MockController_ChannelClient (not exported)
type _MockController_ChannelClientRecorder struct {
	mock *MockController_ChannelClient
}

func NewMockController_ChannelClient(ctrl *gomock.Controller) *MockController_ChannelClient {
	mock := &MockController_ChannelClient{ctrl: ctrl}
	mock.recorder = &_MockController_ChannelClientRecorder{mock}
	return mock
}

func (_m *MockController_ChannelClient) EXPECT() *_MockController_ChannelClientRecorder {
	return _m.recorder
}

func (_m *MockController_ChannelClient) CloseSend() error {
	ret := _m.ctrl.Call(_m, "CloseSend")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockController_ChannelClientRecorder) CloseSend() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CloseSend")
}

func (_m *MockController_ChannelClient) Context() context.Context {
	ret := _m.ctrl.Call(_m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

func (_mr *_MockController_ChannelClientRecorder) Context() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Context")
}

func (_m *MockController_ChannelClient) Header() (metadata.MD, error) {
	ret := _m.ctrl.Call(_m, "Header")
	ret0, _ := ret[0].(metadata.MD)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockController_ChannelClientRecorder) Header() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Header")
}

func (_m *MockController_ChannelClient) Recv() (*rpc.Message, error) {
	ret := _m.ctrl.Call(_m, "Recv")
	ret0, _ := ret[0].(*rpc.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockController_ChannelClientRecorder) Recv() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Recv")
}

func (_m *MockController_ChannelClient) RecvMsg(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "RecvMsg", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockController_ChannelClientRecorder) RecvMsg(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RecvMsg", arg0)
}

func (_m *MockController_ChannelClient) Send(_param0 *rpc.Message) error {
	ret := _m.ctrl.Call(_m, "Send", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockController_ChannelClientRecorder) Send(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Send", arg0)
}

func (_m *MockController_ChannelClient) SendMsg(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "SendMsg", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockController_ChannelClientRecorder) SendMsg(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SendMsg", arg0)
}

func (_m *MockController_ChannelClient) Trailer() metadata.MD {
	ret := _m.ctrl.Call(_m, "Trailer")
	ret0, _ := ret[0].(metadata.MD)
	return ret0
}

func (_mr *_MockController_ChannelClientRecorder) Trailer() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Trailer")
}
